/// <reference types="node" />
import { Config } from './interfaces/config';
import { FakeImageConfig } from './interfaces/fake-image-config';
export declare class WidgetBuilder {
    private config;
    constructor(config?: Config);
    init(): Promise<void>;
    private manifest;
    private readonly debugKey;
    get bundleDir(): string;
    get entryPoint(): string;
    get entryPointIsURL(): boolean;
    get cleanOnFinish(): boolean;
    private get sourceImagesDir();
    private get localesKeys();
    private get locales();
    private get fakeImageConnector();
    private get fakeImageColors();
    clean(): Promise<void>;
    zip(): Promise<string>;
    mergeManifest(): void;
    prepareManifest(): Promise<void>;
    prepareImages(): Promise<void>;
    getOrGenerateImage(imagePath: string | null | undefined, fakeConfig: FakeImageConfig): Promise<Buffer>;
    getFakeImage(fakeConfig: FakeImageConfig): Promise<Buffer>;
    prepareLocalesFiles(): Promise<void>;
    prepareScript(): Promise<void>;
    prepareBundle(): Promise<void>;
    createLocalesFolder(): Promise<void>;
    createImagesFolder(): Promise<void>;
    createTempFolder(): Promise<void>;
    createFolder(path: string): Promise<void>;
    private get localesPath();
    private get imagesPath();
    private get tourImagesPath();
    private get tempWidgetPath();
    private get archivePath();
}
